<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/16/2021 7:18:57 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="MSI"
  DTS:CreatorName="MSI\1prab"
  DTS:DTSID="{734D1E67-7C60-4233-8D90-6470657FCB2F}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.170"
  DTS:LocaleID="16393"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="15"
  DTS:VersionGUID="{07289CBC-7536-43C2-B8A5-886F268DB13D}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[GGBO Excel Data Con]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{6E0CF689-0A57-4A21-ADE5-CF1C882FB5E4}"
      DTS:ObjectName="GGBO Excel Data Con">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\1prab\Documents\Downloads\SSIS Excel\GBBO.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[List of films  2 Data Con]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{4A5D38D2-E3CC-4A34-8A92-8308AE723D26}"
      DTS:ObjectName="List of films  2 Data Con">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\1prab\Documents\Downloads\SSIS Excel\List of films 2.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{06238B56-FA52-4FE9-B126-4AE607A00502}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="NumberSeries">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Are you Lucky ?"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:Disabled="True"
      DTS:DTSID="{E848598F-704C-43FD-84F0-3C40048BBA7F}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Are you Lucky ?"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_e8ccb20f10974271aeb0a65da0af94ee"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_e8ccb20f10974271aeb0a65da0af94ee")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_e8ccb20f10974271aeb0a65da0af94ee")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_e8ccb20f10974271aeb0a65da0af94ee
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            var answer = MessageBox.Show(
                  "Are you feeling lucky?",
                  "Question",
                  MessageBoxButtons.YesNo,
                  MessageBoxIcon.Question
                  );


            if (answer == DialogResult.Yes)
            {
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            else
            {
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_e8ccb20f10974271aeb0a65da0af94ee.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0fdc7fcf-0ec8-4fd6-998c-d80b33bea331}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_e8ccb20f10974271aeb0a65da0af94ee</RootNamespace>
    <AssemblyName>ST_e8ccb20f10974271aeb0a65da0af94ee</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_e8ccb20f10974271aeb0a65da0af94ee</msb:CodeName>
    <msb:DisplayName>ST_e8ccb20f10974271aeb0a65da0af94ee</msb:DisplayName>
    <msb:ProjectId>{F45C3C4D-033E-44BF-A3BD-9CAD51CBDD15}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_e8ccb20f10974271aeb0a65da0af94ee.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e8ccb20f10974271aeb0a65da0af94ee.Properties.Settings.get_Default():ST_e8ccb20f10974271aeb0a65da0af94ee.Properties.Sett" +
    "ings")]

namespace ST_e8ccb20f10974271aeb0a65da0af94ee.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e8ccb20f10974271aeb0a65da0af94ee.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e8ccb20f10974271aeb0a65da0af94ee.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e8ccb20f10974271aeb0a65da0af94ee.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_e8ccb20f10974271aeb0a65da0af94ee.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_e8ccb20f10974271aeb0a65da0af94ee.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_e8ccb20f10974271aeb0a65da0af94ee.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAL7aamEAAAAAAAAAAOAAIiALATAAAA4AAAAIAAAAAAAAZi0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABQtAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAbA0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABI
LQAAAAAAAEgAAAACAAUA6CAAAHQLAAABAAAAAAAAAFwsAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAL5yAQAAcHIvAABwGh8gKBAAAAocMw0CKBEAAAoWbxIAAAoq
AigRAAAKF28SAAAKKh4CKBMAAAoqHgIoFAAACiqufgEAAAQtHnJBAABw0AMAAAIoFQAACm8WAAAK
cxcAAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigYAAAKKi5zCAAABoADAAAE
KgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAsAMAACN+AAAcBAAAPAUAACNT
dHJpbmdzAAAAAFgJAAC0AAAAI1VTAAwKAAAQAAAAI0dVSUQAAAAcCgAAWAEAACNCbG9iAAAAAAAA
AAIAAAFXHaABCQMAAAD6ATMAFgAAAQAAAB8AAAAFAAAABgAAAAkAAAABAAAAGAAAAAIAAAAQAAAA
AgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAAGgMBAAAAAAAGAN0B8AMGAGwC8AMGACkB3QMP
AGQEAAAGAFYBngMGAMABngMGAKEBngMGAFMCngMGAP0BngMGABYCngMGAG0BngMGAIgBkAIKADEC
yQIKAKgAyQIGAEkDQgMGAAwB3QMGAPAEQgMGAMADEAQGALADiQMOANwABAMOAD0BBAMOAMQAdAMG
APEA8AMSACQFqwQSAAMFqwQSAMAEqwQSAGUDqwQKAPICyQIGAHMAQgMGAE8AQgMGADMFngMAAAAA
AQAAAAAAAQABAAEAEABaAysAOQABAAEAAAAQABcEcwRFAAEAAwAAARAAogRzBFkAAwAHAAMBAADi
BAAAPQAEAAoAEQBOA1oAEQCYAF4AEQAbAGIABgYKAGYAVoDSBGkAVoB4AGkAUCAAAAAAhgBgAwYA
AQCAIAAAAACGGNADBgABAIggAAAAAIMY0AMGAAEAkCAAAAAAkwi8A20AAQC8IAAAAACTCIAAcgAB
AMMgAAAAAJMIjAB3AAEAyyAAAAAAlgj3BH0AAgDSIAAAAACGGNADBgACANogAAAAAJEY1gOCAAIA
AAABAIoCCQDQAwEAEQDQAwYAGQDQAwoAKQDQAxAAMQDQAxAAOQDQAxAAQQDQAxAASQDQAxAAUQDQ
AxAAWQDQAxAAYQDQAxAAaQDQAwYAgQDQAwYAqQDQAxUAuQDQAwYAwQAfBRsAcQDaBCYA4QAQBQEA
cQDQAwYAiQDQAwYA6QBhACsA6QAvBTIAkQDQAzcAsQDQAwYACAAUAFAACAAYAFUAKQBzAL0ALgAL
AJUALgATAJ4ALgAbAL0ALgAjAMYALgArAO8ALgAzAO8ALgA7AO8ALgBDAMYALgBLAPUALgBTAO8A
LgBbAAwBQwBjAFUASQBzAL0AYQB7AFUAYwBrAFUAAwABAAQAAwAAAMADhgAAAKAAiwAAAPsEkAAC
AAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAABcfC4kAAAAAAAArAAAABAAAAAAAAAAAAAAA
PgASAAAAAAAPAAAAAAAAAAAAAABHAKoCAAAAAAQAAAAAAAAAAAAAAD4AQgMAAAAABAAAAAAAAAAA
AAAAPgCrBAAAAAAAAAAAAQAAACEEAAAFAAIAAAAAPE1vZHVsZT4AdmFsdWVfXwBtc2NvcmxpYgBk
ZWZhdWx0SW5zdGFuY2UAU1RfZThjY2IyMGYxMDk3NDI3MWFlYjBhNjVkYTBhZjk0ZWUAUnVudGlt
ZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNl
dF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBw
bGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0
ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmli
dXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2Vt
Ymx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNv
bmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxh
dGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJs
eUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNz
ZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHZhbHVl
AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNr
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9k
ZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2U4Y2NiMjBmMTA5NzQyNzFhZWIwYTY1ZGEwYWY5
NGVlLmRsbABTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAE1lc3NhZ2VCb3hJY29u
AFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0
aW9uAEN1bHR1cmVJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5E
aWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJj
ZXMAU1RfZThjY2IyMGYxMDk3NDI3MWFlYjBhNjVkYTBhZjk0ZWUuUHJvcGVydGllcy5SZXNvdXJj
ZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2U4Y2NiMjBmMTA5NzQyNzFhZWIwYTY1ZGEw
YWY5NGVlLlByb3BlcnRpZXMAU2V0dGluZ3MAU3lzdGVtLldpbmRvd3MuRm9ybXMATWVzc2FnZUJv
eEJ1dHRvbnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAT2JqZWN0AGdldF9EZWZhdWx0
AERpYWxvZ1Jlc3VsdABzZXRfVGFza1Jlc3VsdABTaG93AE1lc3NhZ2VCb3gAZ2V0X0Fzc2VtYmx5
AAAtQQByAGUAIAB5AG8AdQAgAGYAZQBlAGwAaQBuAGcAIABsAHUAYwBrAHkAPwAAEVEAdQBlAHMA
dABpAG8AbgAAcVMAVABfAGUAOABjAGMAYgAyADAAZgAxADAAOQA3ADQAMgA3ADEAYQBlAGIAMABh
ADYANQBkAGEAMABhAGYAOQA0AGUAZQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUA
cgBjAGUAcwAAAHt2dHPMoC9Hmh8k6wsL2LUABCABAQgDIAABBSABARERBCABAQ4FIAEBEVEKAAQR
ZQ4OEWkRbQQgABJxBgABEnUReQQgABJ9BiACAQ4SfQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEA
AAADBhJJAwYSTQMGEhACBggDBhEUBAAAEkkEAAASTQUAAQESTQQAABIQAwAAAQQIABJJBAgAEk0E
CAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAj
U1RfZThjY2IyMGYxMDk3NDI3MWFlYjBhNjVkYTBhZjk0ZWUAAAUBAAAAABYBABFDb3B5cmlnaHQg
QCAgMjAyMQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNw
bGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291
cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1u
ZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMu
UnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAA8LQAAAAAAAAAAAABWLQAA
ACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASC0AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVl
LmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEAC4kXHwAAAQALiRcfPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAw
ADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAA
YQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBu
AAAAAABTAFQAXwBlADgAYwBjAGIAMgAwAGYAMQAwADkANwA0ADIANwAxAGEAZQBiADAAYQA2ADUA
ZABhADAAYQBmADkANABlAGUAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAw
AC4ANwA5ADUAOQAuADMANQAwADgAMwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUA
AABTAFQAXwBlADgAYwBjAGIAMgAwAGYAMQAwADkANwA0ADIANwAxAGEAZQBiADAAYQA2ADUAZABh
ADAAYQBmADkANABlAGUALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgA
dAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMQAAACoAAQABAEwAZQBnAGEAbABU
AHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfAGUAOABjAGMAYgAyADAAZgAxADAAOQA3ADQAMgA3ADEAYQBlAGIAMABh
ADYANQBkAGEAMABhAGYAOQA0AGUAZQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwBlADgAYwBjAGIAMgAwAGYAMQAwADkANwA0ADIANwAxAGEAZQBiADAAYQA2
ADUAZABhADAAYQBmADkANABlAGUAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADcAOQA1ADkALgAzADUAMAA4ADMAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcAOQA1ADkALgAzADUAMAA4ADMAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAAaD0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Calculate On Air Time of GGBO Articles"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:Disabled="True"
      DTS:DTSID="{F7DBAA54-0967-45D1-8E59-00548DD7CE20}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Calculate On Air Time of GGBO Articles"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Calculate On Air Time of GGBO Articles\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.Duration = (Row.Finale - Row.Premiere).Days;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public DateTime Premiere
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[0]);
        }
    }
    public bool Premiere_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public DateTime Finale
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[1]);
        }
    }
    public bool Finale_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Int32 Duration
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Duration_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fdd090ae16d44ac683a387629ffaf1cb.Properties.Settings.get_Default():SC_fdd090ae16d44ac683a387629ffaf1cb.Properties.Sett" +
    "ings")]

namespace SC_fdd090ae16d44ac683a387629ffaf1cb.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_fdd090ae16d44ac683a387629ffaf1cb.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{756E1DB9-C3CE-4DB1-9FB9-38AC324F45D4}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_fdd090ae16d44ac683a387629ffaf1cb</RootNamespace>
    <AssemblyName>SC_fdd090ae16d44ac683a387629ffaf1cb</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_fdd090ae16d44ac683a387629ffaf1cb</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_fdd090ae16d44ac683a387629ffaf1cb</msb:DisplayName>
    <msb:ProjectId>{73C7AAF2-DF08-41F9-99DC-F2C720C3D01B}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_fdd090ae16d44ac683a387629ffaf1cb.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_fdd090ae16d44ac683a387629ffaf1cb")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_fdd090ae16d44ac683a387629ffaf1cb")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fdd090ae16d44ac683a387629ffaf1cb.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fdd090ae16d44ac683a387629ffaf1cb.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fdd090ae16d44ac683a387629ffaf1cb.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_fdd090ae16d44ac683a387629ffaf1cb.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_fdd090ae16d44ac683a387629ffaf1cb.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_fdd090ae16d44ac683a387629ffaf1cb.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMHKa2EAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAjjIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADwyAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAlBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABw
MgAAAAAAAEgAAAACAAUA6CEAAJwPAAABAAAAAAAAAIQxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAMAIAAAAAEAABEDA28IAAAG
A28GAAAGKBIAAAoKEgAoEwAACm8KAAAGKh4CKA4AAAYqKgIDBAUoFAAACipSAnsVAAAKAnsWAAAK
FpRvFwAACioiAhYoGAAACipSAnsVAAAKAnsWAAAKF5RvFwAACioiAhcoGAAACio6AhgDjBwAAAEo
GQAACipaAywIAhgoGgAACipyAQAAcHMbAAAKeh4CKBwAAAoqHgIoHQAACip+AigeAAAKAgJzEgAA
Bn0BAAAEAgJzEwAABn0CAAAEKpIEcp4AAHAabx8AAAosFQIFAgMoIAAACg4EcwUAAAZvEAAABipK
KwcCA28RAAAGA28MAAAGLfEqBio6AighAAAKAgN9AwAABCo6AighAAAKAgN9BAAABCoeAighAAAK
Kq5+BQAABC0ecq4AAHDQBwAAAigiAAAKbyMAAApzJAAACoAFAAAEfgUAAAQqGn4GAAAEKh4CgAYA
AAQqGn4HAAAEKh4CKCUAAAoqLnMZAAAGgAcAAAQqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5
AAAAAAUAbAAAALwFAAAjfgAAKAYAAIQGAAAjU3RyaW5ncwAAAACsDAAAIAEAACNVUwDMDQAAEAAA
ACNHVUlEAAAA3A0AAMABAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA+gEzABYAAAEAAAAiAAAA
CAAAAAcAAAAaAAAADwAAACUAAAAQAAAAAQAAAAMAAAAJAAAACgAAAAEAAAAEAAAAAQAAAAAAFAMB
AAAAAAAGAA4CsgQGAKICsgQGAFoBnwQPACYFAAAGAIcB9AMGAPEB9AMGANIB9AMGAIkC9AMGAC4C
9AMGAEcC9AMGAJ4B9AMGALkB3QIKAGICmgAGAJoDhwMKAHEEmgAOAGIEmgAKAD0EmgAGAJEAhwMK
APUFmgAGALgFhwMGAD0BnwQGAIIE0gQGADEE0AMSAA0B/gISAG4B/gISAPUAuwMGACIBsgQGAAEA
hwMGAAYEhwMGAPcChwMGACAEhwMGALsAhwMGAGAAhwMGAHoG9AMAAAAABwAAAAAAAQABAAEAEACj
AwAAEAABAAEAAQAQAFUEAAA9AAEABQABABAA1wUAAE0AAQAOAAEAEACjBQAAUQADABIAAQAQAGQF
AABRAAQAEwAAABAA2QQ1BVEABQAUAAABEACTBTUFaQAHABgABgCjBYoABgBkBY4AAQDlBZIAAQDl
BZIAEQCOA5YAEQDlAJoAEQBFAJ4AUCAAAAAAxgDAAgYAAQBYIAAAAADGAMsCBgABAGAgAAAAAMYA
VwaiAAEAjCAAAAAAhhiSBAYAAgCUIAAAAACGGJIELQACAJ8gAAAAAIYIwACoAAUAtCAAAAAAhghO
A1AABQC9IAAAAACGCFUAqAAFANIgAAAAAIYIPANQAAUA2yAAAAAAhgiuAwEABQDqIAAAAACGCGID
rQAGAAEhAAAAAIYAbgZQAAcACSEAAAAAhgC/BVAABwARIQAAAACGGJIEBgAHADEhAAAAAMYASgay
AAcAViEAAAAAxgFDBqIACwBpIQAAAADGAVcGogAMAGshAAAAAIYYkgS8AA0AeiEAAAAAhhiSBLwA
DgCJIQAAAACDGJIEBgAPAJEhAAAAAJMIfgTCAA8AvSEAAAAAkwjNAMcADwDEIQAAAACTCNkAzAAP
AMwhAAAAAJYIywXSABAA0yEAAAAAhhiSBAYAEADbIQAAAACRGJgE1wAQAAAAAQByBgAAAQB3BAAA
AgBuBQAAAwBLBAAAAQDXAgAAAQDXAgAAAQAQAAAAAgCEAAAAAwB3BAAABABLBAAAAQB3BAAAAQBy
BgAAAQD7BQAAAQD7BQAAAQDXAgkAkgQBABEAkgQGABkAkgQKACkAkgQQADEAkgQQADkAkgQQAEEA
kgQQAEkAkgQQAFEAkgQQAFkAkgQQAGEAkgQQAGkAkgQGAKkAkgQGAMkAkgQVANkAkgQGAJkAwAIG
AJkAywIGAJEA5QMgAHEArwUpAHkAkgQtAHkAdwQ3AHkAbgU7AIEAjgA/AHkAbwNFAHkAfgNKAHkA
dgMBAOkAkgQQAHkAbgZQAHkAvwVQAJkAkgQGAPEAnAVUAJkAggVbAKEAkgQGAAEBcgBhAAEBdgZq
ALEAkgRwANEAkgQGAC4ACwD3AC4AEwAAAS4AGwAfAS4AIwAoAS4AKwBRAS4AMwBRAS4AOwBRAS4A
QwAoAS4ASwBXAS4AUwBRAS4AWwBuAUMAYwC4AeEAewC4AeMAawC4AekAcwAfAQkBcwAfARsAAwAB
AAcABwAIAAkAAADEANsAAABSA+AAAABZANsAAABAA+AAAACyA+QAAABmA+AAAACCBOgAAADtAO0A
AADPBfIAAgAGAAMAAgAHAAUAAgAIAAcAAgAJAAkAAQAKAAsAAQALAA0AAgAVAA8AAgAWABEAAQAX
ABEAAgAYABMABIAAAAEAAAAAAAAAAAAAAAAAGAAAAAQAAAAAAAAAAAAAAHgAPAAAAAAADwAAAAAA
AAAAAAAAgQAFBgAAAAAPAAAAAAAAAAAAAACBACIGAAAAAAQAAAAAAAAAAAAAAHgAhwMAAAAAAAAA
AAEAAADjBAAAAAAASW50MzIAPE1vZHVsZT4ASW5wdXRJRABTQ19mZGQwOTBhZTE2ZDQ0YWM2ODNh
Mzg3NjI5ZmZhZjFjYgBtc2NvcmxpYgBkZWZhdWx0SW5zdGFuY2UAZ2V0X0ZpbmFsZQBSdW50aW1l
VHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBJbnB1dE5hbWUAR2V0RGF0ZVRpbWUATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfUHJlbWllcmUAZ2V0X0N1bHR1cmUA
c2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRv
ckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNl
ckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1
dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJn
ZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2Vt
Ymx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBB
c3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1Nj
cmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRl
AFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFs
dWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBTdHJpbmcAU3lzdGVtLkNvbXBvbmVudE1vZGVs
AFNDX2ZkZDA5MGFlMTZkNDRhYzY4M2EzODc2MjlmZmFmMWNiLmRsbABnZXRfRmluYWxlX0lzTnVs
bABnZXRfUHJlbWllcmVfSXNOdWxsAHNldF9EdXJhdGlvbl9Jc051bGwAU2V0TnVsbABzZXRfSXRl
bQBTeXN0ZW0AcmVzb3VyY2VNYW4AVGltZVNwYW4AU2NyaXB0TWFpbgBzZXRfRHVyYXRpb24AU3lz
dGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24Ab3BfU3VidHJhY3Rpb24AU3lz
dGVtLlJlZmxlY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTdHJpbmdDb21wYXJpc29u
AEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAElucHV0MEJ1ZmZlcgBQaXBlbGlu
ZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lz
dGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJl
c291cmNlcwBTQ19mZGQwOTBhZTE2ZDQ0YWM2ODNhMzg3NjI5ZmZhZjFjYi5Qcm9wZXJ0aWVzLlJl
c291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfZmRkMDkwYWUxNmQ0NGFjNjgzYTM4
NzYyOWZmYWYxY2IuUHJvcGVydGllcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRD
b2x1bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0aW9ucwBnZXRfRGF5cwBPYmplY3QA
RW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2Ny
aXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNl
cnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0
Um93AE5leHRSb3cAZ2V0X0Fzc2VtYmx5AAAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQA
eQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBz
AGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4A
cwB0AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAwAABxUwBDAF8AZgBkAGQAMAA5ADAAYQBlADEANgBk
ADQANABhAGMANgA4ADMAYQAzADgANwA2ADIAOQBmAGYAYQBmADEAYwBiAC4AUAByAG8AcABlAHIA
dABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAABIZxNFYwgSSa8grl0ziZO5AAQgAQEIAyAAAQUg
AQEREQQgAQEOBSABARFhBAcBETkIAAIRORFJEUkDIAAICSADARJBHQgSRQMGEkEDBh0IBSABEUkI
BCABAggFIAIBCBwDIAACBiACAg4RfQUgAR0ICAgAARKAgRGAhQUgABKAiQcgAgEOEoCJCLd6XFYZ
NOCJCImEXc2AgMyRAwYSFAMGEhgDBhJNAwYSWQMGEl0DBhIgBSABARIMBCAAEUkEIAEBAgkgBAEI
DhJBEkUFIAEBEk0EAAASWQQAABJdBQABARJdBAAAEiADAAABBCgAEUkDKAACAygACAQIABJZBAgA
El0ECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAo
AQAjU0NfZmRkMDkwYWUxNmQ0NGFjNjgzYTM4NzYyOWZmYWYxY2IAAAUBAAAAABYBABFDb3B5cmln
aHQgQCAgMjAyMQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtE
aXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAAAAAALQAAADOyu++AQAAAJEAAABsU3lz
dGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwg
Q3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5S
ZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABkMgAAAAAA
AAAAAAB+MgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcDIAAAAAAAAAAAAAAABfQ29yRGxsTWFp
bgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAEMAXwBmAGQAZAAwADkAMABhAGUAMQA2AGQANAA0AGEAYwA2ADgAMwBhADMAOAA3ADYAMgA5
AGYAZgBhAGYAMQBjAGIAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
MAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAGYAZABkADAAOQAw
AGEAZQAxADYAZAA0ADQAYQBjADYAOAAzAGEAMwA4ADcANgAyADkAZgBmAGEAZgAxAGMAYgAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMA
AAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AZgBk
AGQAMAA5ADAAYQBlADEANgBkADQANABhAGMANgA4ADMAYQAzADgANwA2ADIAOQBmAGYAYQBmADEA
YwBiAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGYAZABk
ADAAOQAwAGEAZQAxADYAZAA0ADQAYQBjADYAOAAzAGEAMwA4ADcANgAyADkAZgBmAGEAZgAxAGMA
YgAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4
AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAkDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_fdd090ae16d44ac683a387629ffaf1cb</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">FC</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Calculate On Air Time of GGBO Articles\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Script Component.Inputs[Input 0].Columns[Premiere]"
                      cachedDataType="date"
                      cachedName="Premiere"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].Columns[Premiere]" />
                    <inputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Script Component.Inputs[Input 0].Columns[Finale]"
                      cachedDataType="date"
                      cachedName="Finale"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].Columns[Finale]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Calculate On Air Time of GGBO Articles\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Calculate On Air Time of GGBO Articles\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Script Component.Outputs[Output 0].Columns[Duration]"
                      dataType="i4"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Script Component.Outputs[Output 0].Columns[Duration]"
                      name="Duration" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Calculate On Air Time of GGBO Articles\Source File"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Source File"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Sheet1$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Calculate On Air Time of GGBO Articles\Source File.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[GGBO Excel Data Con]"
                  connectionManagerRefId="Package.ConnectionManagers[GGBO Excel Data Con]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].Columns[Series]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].ExternalColumns[Series]"
                      length="255"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].Columns[Series]"
                      name="Series"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].Columns[Episodes]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].ExternalColumns[Episodes]"
                      length="255"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].Columns[Episodes]"
                      name="Episodes"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].Columns[Premiere]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].ExternalColumns[Premiere]"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].Columns[Premiere]"
                      name="Premiere"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].Columns[Finale]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].ExternalColumns[Finale]"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].Columns[Finale]"
                      name="Finale"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].Columns[Winner]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].ExternalColumns[Winner]"
                      length="255"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].Columns[Winner]"
                      name="Winner"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].Columns[Average viewers (m)]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].ExternalColumns[Average viewers (m)]"
                      length="255"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].Columns[Average viewers (m)]"
                      name="Average viewers (m)"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].Columns[Channel]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].ExternalColumns[Channel]"
                      length="255"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].Columns[Channel]"
                      name="Channel"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].ExternalColumns[Series]"
                      dataType="wstr"
                      length="255"
                      name="Series" />
                    <externalMetadataColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].ExternalColumns[Episodes]"
                      dataType="wstr"
                      length="255"
                      name="Episodes" />
                    <externalMetadataColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].ExternalColumns[Premiere]"
                      dataType="date"
                      name="Premiere" />
                    <externalMetadataColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].ExternalColumns[Finale]"
                      dataType="date"
                      name="Finale" />
                    <externalMetadataColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].ExternalColumns[Winner]"
                      dataType="wstr"
                      length="255"
                      name="Winner" />
                    <externalMetadataColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].ExternalColumns[Average viewers (m)]"
                      dataType="wstr"
                      length="255"
                      name="Average viewers (m)" />
                    <externalMetadataColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].ExternalColumns[Channel]"
                      dataType="wstr"
                      length="255"
                      name="Channel" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Error Output].Columns[Series]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Error Output].Columns[Series]"
                      name="Series" />
                    <outputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Error Output].Columns[Episodes]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Error Output].Columns[Episodes]"
                      name="Episodes" />
                    <outputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Error Output].Columns[Premiere]"
                      dataType="date"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Error Output].Columns[Premiere]"
                      name="Premiere" />
                    <outputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Error Output].Columns[Finale]"
                      dataType="date"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Error Output].Columns[Finale]"
                      name="Finale" />
                    <outputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Error Output].Columns[Winner]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Error Output].Columns[Winner]"
                      name="Winner" />
                    <outputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Error Output].Columns[Average viewers (m)]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Error Output].Columns[Average viewers (m)]"
                      name="Average viewers (m)" />
                    <outputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Error Output].Columns[Channel]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Error Output].Columns[Channel]"
                      name="Channel" />
                    <outputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Calculate On Air Time of GGBO Articles\Union All"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union All"
              version="1">
              <inputs>
                <input
                  refId="Package\Calculate On Air Time of GGBO Articles\Union All.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Union All.Inputs[Union All Input 1].Columns[Series]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Series"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].Columns[Series]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Calculate On Air Time of GGBO Articles\Union All.Outputs[Union All Output 1].Columns[Series]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Union All.Inputs[Union All Input 1].Columns[Episodes]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Episodes"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].Columns[Episodes]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Calculate On Air Time of GGBO Articles\Union All.Outputs[Union All Output 1].Columns[Episodes]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Union All.Inputs[Union All Input 1].Columns[Premiere]"
                      cachedDataType="date"
                      cachedName="Premiere"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].Columns[Premiere]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Calculate On Air Time of GGBO Articles\Union All.Outputs[Union All Output 1].Columns[Premiere]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Union All.Inputs[Union All Input 1].Columns[Finale]"
                      cachedDataType="date"
                      cachedName="Finale"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].Columns[Finale]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Calculate On Air Time of GGBO Articles\Union All.Outputs[Union All Output 1].Columns[Finale]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Union All.Inputs[Union All Input 1].Columns[Winner]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Winner"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].Columns[Winner]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Calculate On Air Time of GGBO Articles\Union All.Outputs[Union All Output 1].Columns[Winner]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Union All.Inputs[Union All Input 1].Columns[Average viewers (m)]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Average viewers (m)"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].Columns[Average viewers (m)]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Calculate On Air Time of GGBO Articles\Union All.Outputs[Union All Output 1].Columns[Average viewers (m)]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Union All.Inputs[Union All Input 1].Columns[Channel]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Channel"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output].Columns[Channel]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Calculate On Air Time of GGBO Articles\Union All.Outputs[Union All Output 1].Columns[Channel]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Union All.Inputs[Union All Input 1].Columns[Duration]"
                      cachedDataType="i4"
                      cachedName="Duration"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Script Component.Outputs[Output 0].Columns[Duration]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Calculate On Air Time of GGBO Articles\Union All.Outputs[Union All Output 1].Columns[Duration]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Calculate On Air Time of GGBO Articles\Union All.Inputs[Union All Input 2]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Calculate On Air Time of GGBO Articles\Union All.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Union All.Outputs[Union All Output 1].Columns[Series]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Union All.Outputs[Union All Output 1].Columns[Series]"
                      name="Series" />
                    <outputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Union All.Outputs[Union All Output 1].Columns[Episodes]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Union All.Outputs[Union All Output 1].Columns[Episodes]"
                      name="Episodes" />
                    <outputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Union All.Outputs[Union All Output 1].Columns[Premiere]"
                      dataType="date"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Union All.Outputs[Union All Output 1].Columns[Premiere]"
                      name="Premiere" />
                    <outputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Union All.Outputs[Union All Output 1].Columns[Finale]"
                      dataType="date"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Union All.Outputs[Union All Output 1].Columns[Finale]"
                      name="Finale" />
                    <outputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Union All.Outputs[Union All Output 1].Columns[Winner]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Union All.Outputs[Union All Output 1].Columns[Winner]"
                      name="Winner" />
                    <outputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Union All.Outputs[Union All Output 1].Columns[Average viewers (m)]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Union All.Outputs[Union All Output 1].Columns[Average viewers (m)]"
                      name="Average viewers (m)" />
                    <outputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Union All.Outputs[Union All Output 1].Columns[Channel]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Union All.Outputs[Union All Output 1].Columns[Channel]"
                      name="Channel" />
                    <outputColumn
                      refId="Package\Calculate On Air Time of GGBO Articles\Union All.Outputs[Union All Output 1].Columns[Duration]"
                      dataType="i4"
                      lineageId="Package\Calculate On Air Time of GGBO Articles\Union All.Outputs[Union All Output 1].Columns[Duration]"
                      name="Duration" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Calculate On Air Time of GGBO Articles.Paths[Excel Source Output]"
              endId="Package\Calculate On Air Time of GGBO Articles\Script Component.Inputs[Input 0]"
              name="Excel Source Output"
              startId="Package\Calculate On Air Time of GGBO Articles\Source File.Outputs[Excel Source Output]" />
            <path
              refId="Package\Calculate On Air Time of GGBO Articles.Paths[Output 0]"
              endId="Package\Calculate On Air Time of GGBO Articles\Union All.Inputs[Union All Input 1]"
              name="Output 0"
              startId="Package\Calculate On Air Time of GGBO Articles\Script Component.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Failure Message"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{e0bb3e6f-4773-4473-a9df-0a23d4143641}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Failure Message"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_f770f56734fc4134ab0614d2375bfbf5"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Films Segrigation"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{94DF4E49-0C9E-41C3-99C9-EC3E6507E84F}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Films Segrigation"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Films Segrigation\Acceptable"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Acceptable"
              version="1">
              <inputs>
                <input
                  refId="Package\Films Segrigation\Acceptable.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Films Segrigation\Acceptable.Inputs[Union All Input 1].Columns[FilmID]"
                      cachedDataType="r8"
                      cachedName="FilmID"
                      lineageId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Output].Columns[FilmID]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Films Segrigation\Acceptable.Outputs[Union All Output 1].Columns[FilmID]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Films Segrigation\Acceptable.Inputs[Union All Input 1].Columns[Title]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Title"
                      lineageId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Output].Columns[Title]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Films Segrigation\Acceptable.Outputs[Union All Output 1].Columns[Title]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Films Segrigation\Acceptable.Inputs[Union All Input 1].Columns[RunTimeMinutes]"
                      cachedDataType="r8"
                      cachedName="RunTimeMinutes"
                      lineageId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Output].Columns[RunTimeMinutes]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Films Segrigation\Acceptable.Outputs[Union All Output 1].Columns[RunTimeMinutes]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Films Segrigation\Acceptable.Inputs[Union All Input 1].Columns[Genre]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Genre"
                      lineageId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Output].Columns[Genre]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Films Segrigation\Acceptable.Outputs[Union All Output 1].Columns[Genre]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Films Segrigation\Acceptable.Inputs[Union All Input 1].Columns[IsAcceptable]"
                      cachedDataType="bool"
                      cachedName="IsAcceptable"
                      lineageId="Package\Films Segrigation\Is Film Acceptable ?.Outputs[Output 0].Columns[IsAcceptable]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Films Segrigation\Acceptable.Outputs[Union All Output 1].Columns[IsAcceptable]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Films Segrigation\Acceptable.Inputs[Union All Input 2]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Films Segrigation\Acceptable.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Films Segrigation\Acceptable.Outputs[Union All Output 1].Columns[FilmID]"
                      dataType="r8"
                      lineageId="Package\Films Segrigation\Acceptable.Outputs[Union All Output 1].Columns[FilmID]"
                      name="FilmID" />
                    <outputColumn
                      refId="Package\Films Segrigation\Acceptable.Outputs[Union All Output 1].Columns[Title]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Films Segrigation\Acceptable.Outputs[Union All Output 1].Columns[Title]"
                      name="Title" />
                    <outputColumn
                      refId="Package\Films Segrigation\Acceptable.Outputs[Union All Output 1].Columns[RunTimeMinutes]"
                      dataType="r8"
                      lineageId="Package\Films Segrigation\Acceptable.Outputs[Union All Output 1].Columns[RunTimeMinutes]"
                      name="RunTimeMinutes" />
                    <outputColumn
                      refId="Package\Films Segrigation\Acceptable.Outputs[Union All Output 1].Columns[Genre]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Films Segrigation\Acceptable.Outputs[Union All Output 1].Columns[Genre]"
                      name="Genre" />
                    <outputColumn
                      refId="Package\Films Segrigation\Acceptable.Outputs[Union All Output 1].Columns[IsAcceptable]"
                      dataType="bool"
                      lineageId="Package\Films Segrigation\Acceptable.Outputs[Union All Output 1].Columns[IsAcceptable]"
                      name="IsAcceptable" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Films Segrigation\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Films Segrigation\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Films Segrigation\Conditional Split.Inputs[Conditional Split Input].Columns[IsAcceptable]"
                      cachedDataType="bool"
                      cachedName="IsAcceptable"
                      lineageId="Package\Films Segrigation\Is Film Acceptable ?.Outputs[Output 0].Columns[IsAcceptable]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Films Segrigation\Conditional Split.Outputs[Acceptable]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Acceptable"
                  synchronousInputId="Package\Films Segrigation\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Films Segrigation\Is Film Acceptable ?.Outputs[Output 0].Columns[IsAcceptable]} ==  TRUE </property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">IsAcceptable ==  TRUE </property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Films Segrigation\Conditional Split.Outputs[NotAcceptable]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="NotAcceptable"
                  synchronousInputId="Package\Films Segrigation\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Films Segrigation\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Films Segrigation\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Films Segrigation\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Films Segrigation\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Films Segrigation\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Films Segrigation\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Films Segrigation\Films Data Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Films Data Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Sheet1$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Films Segrigation\Films Data Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[List of films  2 Data Con]"
                  connectionManagerRefId="Package.ConnectionManagers[List of films  2 Data Con]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Output].Columns[FilmID]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Output].ExternalColumns[FilmID]"
                      lineageId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Output].Columns[FilmID]"
                      name="FilmID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Output].Columns[Title]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Output].ExternalColumns[Title]"
                      length="255"
                      lineageId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Output].Columns[Title]"
                      name="Title"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Output].Columns[RunTimeMinutes]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Output].ExternalColumns[RunTimeMinutes]"
                      lineageId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Output].Columns[RunTimeMinutes]"
                      name="RunTimeMinutes"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Output].Columns[Genre]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Output].ExternalColumns[Genre]"
                      length="255"
                      lineageId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Output].Columns[Genre]"
                      name="Genre"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Output].ExternalColumns[FilmID]"
                      dataType="r8"
                      name="FilmID" />
                    <externalMetadataColumn
                      refId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Output].ExternalColumns[Title]"
                      dataType="wstr"
                      length="255"
                      name="Title" />
                    <externalMetadataColumn
                      refId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Output].ExternalColumns[RunTimeMinutes]"
                      dataType="r8"
                      name="RunTimeMinutes" />
                    <externalMetadataColumn
                      refId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Output].ExternalColumns[Genre]"
                      dataType="wstr"
                      length="255"
                      name="Genre" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Error Output].Columns[FilmID]"
                      dataType="r8"
                      lineageId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Error Output].Columns[FilmID]"
                      name="FilmID" />
                    <outputColumn
                      refId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Error Output].Columns[Title]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Error Output].Columns[Title]"
                      name="Title" />
                    <outputColumn
                      refId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Error Output].Columns[RunTimeMinutes]"
                      dataType="r8"
                      lineageId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Error Output].Columns[RunTimeMinutes]"
                      name="RunTimeMinutes" />
                    <outputColumn
                      refId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Error Output].Columns[Genre]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Error Output].Columns[Genre]"
                      name="Genre" />
                    <outputColumn
                      refId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Films Segrigation\Is Film Acceptable ?"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Is Film Acceptable ?"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.IsAcceptable = true;
        if (!Row.RunTimeMinutes_IsNull && Convert.ToInt32(Row.RunTimeMinutes) > 240)
        {Row.IsAcceptable = false;}
        else if (!Row.Genre_IsNull && Row.Genre.Trim().ToLower() == "horror")
        { Row.IsAcceptable = false; }
        else if (!Row.Title_IsNull && Row.Title.ToLower().Trim().Contains("twilight saga"))
        { Row.IsAcceptable = false; }

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Title
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Title_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Double RunTimeMinutes
    {
        get
        {
            return Buffer.GetDouble(BufferColumnIndexes[1]);
        }
    }
    public bool RunTimeMinutes_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String Genre
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool Genre_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Boolean IsAcceptable
    {
        set
        {
            this[3] = value;
        }
    }
    public bool IsAcceptable_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_85f8508682c543d5a6c14c05b10c5769.Properties.Settings.get_Default():SC_85f8508682c543d5a6c14c05b10c5769.Properties.Sett" +
    "ings")]

namespace SC_85f8508682c543d5a6c14c05b10c5769.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_85f8508682c543d5a6c14c05b10c5769.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7ed7a10b-50aa-4066-8924-252fb40be0b6}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_85f8508682c543d5a6c14c05b10c5769</RootNamespace>
    <AssemblyName>SC_85f8508682c543d5a6c14c05b10c5769</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_85f8508682c543d5a6c14c05b10c5769" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_85f8508682c543d5a6c14c05b10c5769</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_85f8508682c543d5a6c14c05b10c5769</msb:DisplayName>
    <msb:ProjectId>{0FA6430F-447E-4130-98D7-DFC476930D8E}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_85f8508682c543d5a6c14c05b10c5769.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_85f8508682c543d5a6c14c05b10c5769")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_85f8508682c543d5a6c14c05b10c5769")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_85f8508682c543d5a6c14c05b10c5769.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_85f8508682c543d5a6c14c05b10c5769.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_85f8508682c543d5a6c14c05b10c5769.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_85f8508682c543d5a6c14c05b10c5769.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_85f8508682c543d5a6c14c05b10c5769.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_85f8508682c543d5a6c14c05b10c5769.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAE7Ta2EAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAujMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGgzAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAwBMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACc
MwAAAAAAAEgAAAACAAUAaCIAAEgQAAABAAAAAAAAALAyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAIAgQAAAAAAAAADF28MAAAG
A28JAAAGLRoDbwgAAAYoEgAACiDwAAAAMQgDFm8MAAAGKgNvCwAABi0kA28KAAAGbxMAAApvFAAA
CnIBAABwKBUAAAosCAMWbwwAAAYqA28HAAAGLSMDbwYAAAZvFAAACm8TAAAKcg8AAHBvFgAACiwH
AxZvDAAABioeAigQAAAGKioCAwQFKBcAAAoqUgJ7GAAACgJ7GQAAChaUbxoAAAoqIgIWKBsAAAoq
UgJ7GAAACgJ7GQAACheUbxwAAAoqIgIXKBsAAAoqUgJ7GAAACgJ7GQAAChiUbxoAAAoqIgIYKBsA
AAoqOgIZA4wcAAABKB0AAAoqWgMsCAIZKB4AAAoqcisAAHBzHwAACnoeAiggAAAKKh4CKCEAAAoq
fgIoIgAACgICcxQAAAZ9AQAABAICcxUAAAZ9AgAABCqSBHLIAABwGm8jAAAKLBUCBQIDKCQAAAoO
BHMFAAAGbxIAAAYqSisHAgNvEwAABgNvDgAABi3xKgYqOgIoJQAACgIDfQMAAAQqOgIoJQAACgID
fQQAAAQqHgIoJQAACiqufgUAAAQtHnLYAABw0AcAAAIoJgAACm8nAAAKcygAAAqABQAABH4FAAAE
Khp+BgAABCoeAoAGAAAEKhp+BwAABCoeAigpAAAKKi5zGwAABoAHAAAEKgAAQlNKQgEAAQAAAAAA
DAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA/AUAACN+AABoBgAAxAYAACNTdHJpbmdzAAAAACwNAABM
AQAAI1VTAHgOAAAQAAAAI0dVSUQAAACIDgAAwAEAACNCbG9iAAAAAAAAAAIAAAFXFaABCQEAAAD6
ATMAFgAAAQAAACEAAAAIAAAABwAAABwAAAAPAAAAKQAAABAAAAADAAAACwAAAAwAAAABAAAABAAA
AAEAAAAAACQDAQAAAAAABgAbAswEBgCvAswEBgBnAbkEDwBABQAABgCUAQYEBgD+AQYEBgDfAQYE
BgCWAgYEBgA7AgYEBgBUAgYEBgCrAQYEBgDGAeoCCgBvAqoACgCDBKoADgB0BKoACgBPBKoACgAi
BqoABgDlBbEDBgBKAbkEBgCUBOwEBgBDBPEDEgAaAQ4DEgB7AQ4DEgACAdwDBgAvAcwEBgBPBrED
BgAHA7EDBgDJA7EDBgAYBLEDBgAyBLEDBgDLALEDBgByALEDBgCvBgYEAAAAAC0AAAAAAAEAAQAB
ABAA0QMAABAAAQABAAEAEABnBAAAOQABAAUAAQAQAAQGAABFAAEAEAABABAA2QUAAEkAAwAUAAEA
EAB+BQAASQAEABUAAAAQAPMETwVJAAUAFgAAARAAwAVPBWEABwAaAAYA2QWPAAYAfgWTAAEAEgaX
AAEAEgaXABEAvQObABEA8gCfABEARwCjAFAgAAAAAMYAzQIGAAEAWCAAAAAAxgDYAgYAAQBgIAAA
AADGAIwGpwABAO0gAAAAAIYYrAQGAAIA9SAAAAAAhhisBC8AAgAAIQAAAACGCJYAIAAFABUhAAAA
AIYIZANWAAUAHiEAAAAAhgiIBa0ABQAzIQAAAACGCIYDVgAFADwhAAAAAIYI0AAgAAUAUSEAAAAA
hgh1A1YABQBaIQAAAACGCFcAsQAFAGkhAAAAAIYITAOxAAYAgCEAAAAAhgCjBlYABwCIIQAAAACG
AOwFVgAHAJAhAAAAAIYYrAQGAAcAsCEAAAAAxgB/BrYABwDVIQAAAADGAXgGpwALAOghAAAAAMYB
jAanAAwA6iEAAAAAhhisBMAADQD5IQAAAACGGKwEwAAOAAgiAAAAAIMYrAQGAA8AECIAAAAAkwiQ
BMYADwA8IgAAAACTCNoAywAPAEMiAAAAAJMI5gDQAA8ASyIAAAAAlgj4BdYAEABSIgAAAACGGKwE
BgAQAFoiAAAAAJEYsgTbABAAAAABAKcGAAABAIkEAAACAJsFAAADAF0EAAABAOQCAAABAOQCAAAB
ADYAAAACAKAAAAADAIkEAAAEAF0EAAABAIkEAAABAKcGAAABACgGAAABACgGAAABAOQCCQCsBAEA
EQCsBAYAGQCsBAoAKQCsBBAAMQCsBBAAOQCsBBAAQQCsBBAASQCsBBAAUQCsBBAAWQCsBBAAYQCs
BBAAaQCsBAYAmQCsBAYAuQCsBBUAyQCsBAYAiQDNAgYAiQDYAgYA0QABABsA2QC4AyAA2QCkBCAA
2QC4BiQA2QDQBSoAcQCsBC8AcQCJBDkAcQCbBT0AeQAEA0EAcQCZA0YAeQBoAEsAcQCoA1AAcQCg
AwEA6QCsBBAAcQCjBlYAcQDsBVYAiQCsBAYA2QDJBVoAiQCvBWEAkQCsBAYA+QCEAGcA+QCrBm8A
oQCsBHUAwQCsBAYALgALAPoALgATAAMBLgAbACIBLgAjACsBLgArAFQBLgAzAFQBLgA7AFQBLgBD
ACsBLgBLAFoBLgBTAFQBLgBbAHEBQwBjALsB4QB7ALsB4wBrALsBKQFzACIBSQFzACIBAwABAAcA
CQAIAAsAAACaAN8AAABoA+MAAACMBecAAACKA+MAAADUAN8AAAB5A+MAAABbAOMAAABQA+MAAACU
BOsAAAD6APAAAAD8BfUAAgAGAAMAAgAHAAUAAgAIAAcAAgAJAAkAAgAKAAsAAgALAA0AAQAMAA8A
AQANABEAAgAXABMAAgAYABUAAQAZABUAAgAaABcABIAAAAEAAAAAAAAAAAAAAAAACQAAAAQAAAAA
AAAAAAAAAH0APgAAAAAADwAAAAAAAAAAAAAAhgAyBgAAAAAPAAAAAAAAAAAAAACGAFcGAAAAAAQA
AAAAAAAAAAAAAH0AsQMAAAAAAAAAAAEAAAD9BAAAAAAAVG9JbnQzMgBTQ184NWY4NTA4NjgyYzU0
M2Q1YTZjMTRjMDViMTBjNTc2OQA8TW9kdWxlPgBJbnB1dElEAG1zY29ybGliAGRlZmF1bHRJbnN0
YW5jZQBzZXRfSXNBY2NlcHRhYmxlAEdldERvdWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBl
RnJvbUhhbmRsZQBnZXRfVGl0bGUASW5wdXROYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBp
cGVsaW5lAFR5cGUAZ2V0X0dlbnJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3Vs
dHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxl
ckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2Fi
bGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1
dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFz
c2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRl
AENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRl
AEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0
dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNp
b25pbmcAR2V0U3RyaW5nAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ184NWY4NTA4NjgyYzU0M2Q1
YTZjMTRjMDViMTBjNTc2OS5kbGwAc2V0X0lzQWNjZXB0YWJsZV9Jc051bGwAZ2V0X1RpdGxlX0lz
TnVsbABnZXRfR2VucmVfSXNOdWxsAGdldF9SdW5UaW1lTWludXRlc19Jc051bGwAU2V0TnVsbABz
ZXRfSXRlbQBTeXN0ZW0AVHJpbQByZXNvdXJjZU1hbgBCb29sZWFuAFNjcmlwdE1haW4AU3lzdGVt
LkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ASW52
YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTdHJpbmdDb21wYXJpc29uAEN1bHR1cmVJbmZvAE91dHB1
dE5hbWVNYXAAT3V0cHV0TWFwAElucHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZm
ZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBUb0xvd2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25v
c3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFND
Xzg1Zjg1MDg2ODJjNTQzZDVhNmMxNGMwNWIxMGM1NzY5LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJl
c291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ184NWY4NTA4NjgyYzU0M2Q1YTZjMTRjMDViMTBjNTc2
OS5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBnZXRfUnVuVGltZU1pbnV0ZXMAQnVmZmVyQ29sdW1uSW5k
ZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBDb250YWlucwBDb25uZWN0aW9u
cwBPYmplY3QARW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21w
b25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQAQ29udmVy
dABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AElu
cHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBnZXRfQXNzZW1ibHkAb3BfRXF1YWxpdHkAAA1o
AG8AcgByAG8AcgAAG3QAdwBpAGwAaQBnAGgAdAAgAHMAYQBnAGEAAICbSQBzAE4AdQBsAGwAIABw
AHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwA
cwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBs
AHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAcVMAQwBfADgANQBmADgA
NQAwADgANgA4ADIAYwA1ADQAMwBkADUAYQA2AGMAMQA0AGMAMAA1AGIAMQAwAGMANQA3ADYAOQAu
AFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAC7J+F841jCS5s+nbZ9
W8gOAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZBAABCA0DIAAOBQACAg4OBCABAg4JIAMBEj0d
CBJBAwYSPQMGHQgEIAEOCAQgAQIIBCABDQgFIAIBCBwDIAACBiACAg4ReQUgAR0ICAcAARJ9EYCB
BSAAEoCFByACAQ4SgIUIt3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMGEkUDBhJRAwYSVQMGEiAF
IAEBEgwDIAANBCABAQIJIAQBCA4SPRJBBSABARJFBAAAElEEAAASVQUAAQESVQQAABIgAwAAAQMo
AA4DKAACAygADQQIABJRBAgAElUECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlv
blRocm93cwEIAQACAAAAAAAoAQAjU0NfODVmODUwODY4MmM1NDNkNWE2YzE0YzA1YjEwYzU3NjkA
AAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAALQAAADO
yu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZl
cnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5
MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFE
UEFEULQAAACQMwAAAAAAAAAAAACqMwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnDMAAAAAAAAA
AAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAEMAXwA4ADUAZgA4ADUAMAA4ADYAOAAyAGMANQA0ADMAZAA1AGEANgBjADEANABjADAANQBi
ADEAMABjADUANwA2ADkAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
MAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADgANQBmADgANQAw
ADgANgA4ADIAYwA1ADQAMwBkADUAYQA2AGMAMQA0AGMAMAA1AGIAMQAwAGMANQA3ADYAOQAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMA
AAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AOAA1
AGYAOAA1ADAAOAA2ADgAMgBjADUANAAzAGQANQBhADYAYwAxADQAYwAwADUAYgAxADAAYwA1ADcA
NgA5AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADgANQBm
ADgANQAwADgANgA4ADIAYwA1ADQAMwBkADUAYQA2AGMAMQA0AGMAMAA1AGIAMQAwAGMANQA3ADYA
OQAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4
AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAvDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_85f8508682c543d5a6c14c05b10c5769</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">A5</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Films Segrigation\Is Film Acceptable ?.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Films Segrigation\Is Film Acceptable ?.Inputs[Input 0].Columns[Title]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Title"
                      lineageId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Output].Columns[Title]" />
                    <inputColumn
                      refId="Package\Films Segrigation\Is Film Acceptable ?.Inputs[Input 0].Columns[RunTimeMinutes]"
                      cachedDataType="r8"
                      cachedName="RunTimeMinutes"
                      lineageId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Output].Columns[RunTimeMinutes]" />
                    <inputColumn
                      refId="Package\Films Segrigation\Is Film Acceptable ?.Inputs[Input 0].Columns[Genre]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Genre"
                      lineageId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Output].Columns[Genre]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Films Segrigation\Is Film Acceptable ?.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Films Segrigation\Is Film Acceptable ?.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Films Segrigation\Is Film Acceptable ?.Outputs[Output 0].Columns[IsAcceptable]"
                      dataType="bool"
                      lineageId="Package\Films Segrigation\Is Film Acceptable ?.Outputs[Output 0].Columns[IsAcceptable]"
                      name="IsAcceptable" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Films Segrigation\Not Acceptable"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Not Acceptable"
              version="1">
              <inputs>
                <input
                  refId="Package\Films Segrigation\Not Acceptable.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Films Segrigation\Not Acceptable.Inputs[Union All Input 1].Columns[FilmID]"
                      cachedDataType="r8"
                      cachedName="FilmID"
                      lineageId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Output].Columns[FilmID]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Films Segrigation\Not Acceptable.Outputs[Union All Output 1].Columns[FilmID]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Films Segrigation\Not Acceptable.Inputs[Union All Input 1].Columns[Title]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Title"
                      lineageId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Output].Columns[Title]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Films Segrigation\Not Acceptable.Outputs[Union All Output 1].Columns[Title]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Films Segrigation\Not Acceptable.Inputs[Union All Input 1].Columns[RunTimeMinutes]"
                      cachedDataType="r8"
                      cachedName="RunTimeMinutes"
                      lineageId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Output].Columns[RunTimeMinutes]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Films Segrigation\Not Acceptable.Outputs[Union All Output 1].Columns[RunTimeMinutes]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Films Segrigation\Not Acceptable.Inputs[Union All Input 1].Columns[Genre]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Genre"
                      lineageId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Output].Columns[Genre]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Films Segrigation\Not Acceptable.Outputs[Union All Output 1].Columns[Genre]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Films Segrigation\Not Acceptable.Inputs[Union All Input 1].Columns[IsAcceptable]"
                      cachedDataType="bool"
                      cachedName="IsAcceptable"
                      lineageId="Package\Films Segrigation\Is Film Acceptable ?.Outputs[Output 0].Columns[IsAcceptable]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Films Segrigation\Not Acceptable.Outputs[Union All Output 1].Columns[IsAcceptable]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Films Segrigation\Not Acceptable.Inputs[Union All Input 2]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Films Segrigation\Not Acceptable.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Films Segrigation\Not Acceptable.Outputs[Union All Output 1].Columns[FilmID]"
                      dataType="r8"
                      lineageId="Package\Films Segrigation\Not Acceptable.Outputs[Union All Output 1].Columns[FilmID]"
                      name="FilmID" />
                    <outputColumn
                      refId="Package\Films Segrigation\Not Acceptable.Outputs[Union All Output 1].Columns[Title]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Films Segrigation\Not Acceptable.Outputs[Union All Output 1].Columns[Title]"
                      name="Title" />
                    <outputColumn
                      refId="Package\Films Segrigation\Not Acceptable.Outputs[Union All Output 1].Columns[RunTimeMinutes]"
                      dataType="r8"
                      lineageId="Package\Films Segrigation\Not Acceptable.Outputs[Union All Output 1].Columns[RunTimeMinutes]"
                      name="RunTimeMinutes" />
                    <outputColumn
                      refId="Package\Films Segrigation\Not Acceptable.Outputs[Union All Output 1].Columns[Genre]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Films Segrigation\Not Acceptable.Outputs[Union All Output 1].Columns[Genre]"
                      name="Genre" />
                    <outputColumn
                      refId="Package\Films Segrigation\Not Acceptable.Outputs[Union All Output 1].Columns[IsAcceptable]"
                      dataType="bool"
                      lineageId="Package\Films Segrigation\Not Acceptable.Outputs[Union All Output 1].Columns[IsAcceptable]"
                      name="IsAcceptable" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Films Segrigation.Paths[Acceptable]"
              endId="Package\Films Segrigation\Acceptable.Inputs[Union All Input 1]"
              name="Acceptable"
              startId="Package\Films Segrigation\Conditional Split.Outputs[Acceptable]" />
            <path
              refId="Package\Films Segrigation.Paths[Excel Source Output]"
              endId="Package\Films Segrigation\Is Film Acceptable ?.Inputs[Input 0]"
              name="Excel Source Output"
              startId="Package\Films Segrigation\Films Data Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\Films Segrigation.Paths[NotAcceptable]"
              endId="Package\Films Segrigation\Not Acceptable.Inputs[Union All Input 1]"
              name="NotAcceptable"
              startId="Package\Films Segrigation\Conditional Split.Outputs[NotAcceptable]" />
            <path
              refId="Package\Films Segrigation.Paths[Output 0]"
              endId="Package\Films Segrigation\Conditional Split.Inputs[Conditional Split Input]"
              name="Output 0"
              startId="Package\Films Segrigation\Is Film Acceptable ?.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Success Message"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{d29c41ff-dc21-48eb-aba9-bf495cb80cec}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Success Message"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_a29ef7f93c394262b760175a434beeff"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Varriable Utilization"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:Disabled="True"
      DTS:DTSID="{6E81C80B-EAF9-4F4F-B1C7-279A8895BD58}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Varriable Utilization"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Varriable Utilization\GGBO Excel Data"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="GGBO Excel Data"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Sheet1$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Varriable Utilization\GGBO Excel Data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[GGBO Excel Data Con]"
                  connectionManagerRefId="Package.ConnectionManagers[GGBO Excel Data Con]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output].Columns[Series]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output].ExternalColumns[Series]"
                      length="255"
                      lineageId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output].Columns[Series]"
                      name="Series"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output].Columns[Episodes]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output].ExternalColumns[Episodes]"
                      length="255"
                      lineageId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output].Columns[Episodes]"
                      name="Episodes"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output].Columns[Premiere]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output].ExternalColumns[Premiere]"
                      lineageId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output].Columns[Premiere]"
                      name="Premiere"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output].Columns[Finale]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output].ExternalColumns[Finale]"
                      lineageId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output].Columns[Finale]"
                      name="Finale"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output].Columns[Winner]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output].ExternalColumns[Winner]"
                      length="255"
                      lineageId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output].Columns[Winner]"
                      name="Winner"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output].Columns[Average viewers (m)]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output].ExternalColumns[Average viewers (m)]"
                      length="255"
                      lineageId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output].Columns[Average viewers (m)]"
                      name="Average viewers (m)"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output].Columns[Channel]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output].ExternalColumns[Channel]"
                      length="255"
                      lineageId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output].Columns[Channel]"
                      name="Channel"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output].ExternalColumns[Series]"
                      dataType="wstr"
                      length="255"
                      name="Series" />
                    <externalMetadataColumn
                      refId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output].ExternalColumns[Episodes]"
                      dataType="wstr"
                      length="255"
                      name="Episodes" />
                    <externalMetadataColumn
                      refId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output].ExternalColumns[Premiere]"
                      dataType="date"
                      name="Premiere" />
                    <externalMetadataColumn
                      refId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output].ExternalColumns[Finale]"
                      dataType="date"
                      name="Finale" />
                    <externalMetadataColumn
                      refId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output].ExternalColumns[Winner]"
                      dataType="wstr"
                      length="255"
                      name="Winner" />
                    <externalMetadataColumn
                      refId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output].ExternalColumns[Average viewers (m)]"
                      dataType="wstr"
                      length="255"
                      name="Average viewers (m)" />
                    <externalMetadataColumn
                      refId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output].ExternalColumns[Channel]"
                      dataType="wstr"
                      length="255"
                      name="Channel" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Error Output].Columns[Series]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Error Output].Columns[Series]"
                      name="Series" />
                    <outputColumn
                      refId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Error Output].Columns[Episodes]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Error Output].Columns[Episodes]"
                      name="Episodes" />
                    <outputColumn
                      refId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Error Output].Columns[Premiere]"
                      dataType="date"
                      lineageId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Error Output].Columns[Premiere]"
                      name="Premiere" />
                    <outputColumn
                      refId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Error Output].Columns[Finale]"
                      dataType="date"
                      lineageId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Error Output].Columns[Finale]"
                      name="Finale" />
                    <outputColumn
                      refId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Error Output].Columns[Winner]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Error Output].Columns[Winner]"
                      name="Winner" />
                    <outputColumn
                      refId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Error Output].Columns[Average viewers (m)]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Error Output].Columns[Average viewers (m)]"
                      name="Average viewers (m)" />
                    <outputColumn
                      refId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Error Output].Columns[Channel]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Error Output].Columns[Channel]"
                      name="Channel" />
                    <outputColumn
                      refId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Varriable Utilization\Row Count"
              componentClassID="Microsoft.RowCount"
              contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
              name="Row Count">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable to hold the row count."
                  name="VariableName">User::NumberSeries</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Varriable Utilization\Row Count.Inputs[Row Count Input 1]"
                  hasSideEffects="true"
                  name="Row Count Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Varriable Utilization\Row Count.Outputs[Row Count Output 1]"
                  name="Row Count Output 1"
                  synchronousInputId="Package\Varriable Utilization\Row Count.Inputs[Row Count Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Varriable Utilization.Paths[Excel Source Output]"
              endId="Package\Varriable Utilization\Row Count.Inputs[Row Count Input 1]"
              name="Excel Source Output"
              startId="Package\Varriable Utilization\GGBO Excel Data.Outputs[Excel Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{8FAD830A-7AFD-4337-872D-694E53360DE3}"
      DTS:From="Package\Are you Lucky ?"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Success Message" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{9A4AA3DF-3D0A-474E-8DA0-BB0830FF7B35}"
      DTS:From="Package\Are you Lucky ?"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Failure Message"
      DTS:Value="1" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\Are you Lucky ?"
          TopLeft="169.071428802549,37.3705865729638" />
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\Failure Message"
          TopLeft="295.71429075027,175.776471628532" />
        <NodeLayout
          Size="261.6,41.6"
          Id="Package\Calculate On Air Time of GGBO Articles"
          TopLeft="489.071436295705,121.147060024697" />
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\Success Message"
          TopLeft="45.7142864927955,175.88235540786" />
        <NodeLayout
          Size="169.6,41.6"
          Id="Package\Varriable Utilization"
          TopLeft="532.642866120046,35.3235298300284" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="213.604762135882,78.9705865729638">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-103.090475643086,96.9117688348963"
              Start="0,0"
              End="-103.090475643086,89.4117688348963">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.4738180376285" />
                  <mssgle:CubicBezierSegment
                    Point1="0,35.4738180376285"
                    Point2="0,39.4738180376285"
                    Point3="-4,39.4738180376285" />
                  <mssgle:LineSegment
                    End="-99.0904756430865,39.4738180376285" />
                  <mssgle:CubicBezierSegment
                    Point1="-99.0904756430865,39.4738180376285"
                    Point2="-103.090475643086,39.4738180376285"
                    Point3="-103.090475643086,43.4738180376285" />
                  <mssgle:LineSegment
                    End="-103.090475643086,89.4117688348963" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="254.138095469215,78.9705865729638">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="106.376195281055,96.8058850555686"
              Start="0,0"
              End="106.376195281055,89.3058850555686">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.4306897665365" />
                  <mssgle:CubicBezierSegment
                    Point1="0,35.4306897665365"
                    Point2="0,39.4306897665365"
                    Point3="4,39.4306897665365" />
                  <mssgle:LineSegment
                    End="102.376195281055,39.4306897665365" />
                  <mssgle:CubicBezierSegment
                    Point1="102.376195281055,39.4306897665365"
                    Point2="106.376195281055,39.4306897665365"
                    Point3="106.376195281055,43.4306897665365" />
                  <mssgle:LineSegment
                    End="106.376195281055,89.3058850555686" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="37.9467499842776,44.4306897665365,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="159.2,41.6"
          Id="Package\Films Segrigation"
          TopLeft="882.142872165661,48.1764712638921" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Calculate On Air Time of GGBO Articles">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\Calculate On Air Time of GGBO Articles\Source File"
          TopLeft="77,26" />
        <NodeLayout
          Size="162.4,41.6"
          Id="Package\Calculate On Air Time of GGBO Articles\Script Component"
          TopLeft="63.5714296540436,139.176472540133" />
        <EdgeLayout
          Id="Package\Calculate On Air Time of GGBO Articles.Paths[Excel Source Output]"
          TopLeft="143.285714827022,67.6">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,71.5764725401328"
              Start="0,0"
              End="0,64.0764725401328">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,64.0764725401328" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="120,41.6"
          Id="Package\Calculate On Air Time of GGBO Articles\Union All"
          TopLeft="85.0000014475414,248.529415250237" />
        <EdgeLayout
          Id="Package\Calculate On Air Time of GGBO Articles.Paths[Output 0]"
          TopLeft="144.885715550792,180.776472540133">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,67.7529427101043"
              Start="0,0"
              End="0,60.2529427101043">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,60.2529427101043" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Calculate On Air Time of GGBO Articles\Source File">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Varriable Utilization">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="159.2,41.6"
          Id="Package\Varriable Utilization\GGBO Excel Data"
          TopLeft="154.5,24.5" />
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\Varriable Utilization\Row Count"
          TopLeft="169,115" />
        <EdgeLayout
          Id="Package\Varriable Utilization.Paths[Excel Source Output]"
          TopLeft="233.95,66.1">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48.9"
              Start="0,0"
              End="0,41.4">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.4" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Varriable Utilization\GGBO Excel Data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Films Segrigation">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="163.2,41.6"
          Id="Package\Films Segrigation\Films Data Source"
          TopLeft="707,25" />
        <NodeLayout
          Size="172.8,41.6"
          Id="Package\Films Segrigation\Is Film Acceptable ?"
          TopLeft="708.5,105.5" />
        <EdgeLayout
          Id="Package\Films Segrigation.Paths[Excel Source Output]"
          TopLeft="791.75,66.6">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.9"
              Start="0,0"
              End="0,31.4">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.4" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="154.4,41.6"
          Id="Package\Films Segrigation\Conditional Split"
          TopLeft="717.5,191.5" />
        <EdgeLayout
          Id="Package\Films Segrigation.Paths[Output 0]"
          TopLeft="794.8,147.1">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.4"
              Start="0,0"
              End="0,36.9">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.9" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\Films Segrigation\Acceptable"
          TopLeft="619,279" />
        <EdgeLayout
          Id="Package\Films Segrigation.Paths[Acceptable]"
          TopLeft="770.3,233.1">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-86.5,45.9"
              Start="0,0"
              End="-86.5,38.4">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.6424615384615" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.6424615384615"
                    Point2="0,18.6424615384615"
                    Point3="-4,18.6424615384615" />
                  <mssgle:LineSegment
                    End="-82.5,18.6424615384615" />
                  <mssgle:CubicBezierSegment
                    Point1="-82.5,18.6424615384615"
                    Point2="-86.5,18.6424615384615"
                    Point3="-86.5,22.6424615384615" />
                  <mssgle:LineSegment
                    End="-86.5,38.4" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-67.9844140625,23.6424615384615,49.468828125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="148.8,41.6"
          Id="Package\Films Segrigation\Not Acceptable"
          TopLeft="895,279" />
        <EdgeLayout
          Id="Package\Films Segrigation.Paths[NotAcceptable]"
          TopLeft="819.1,233.1">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="150.3,45.8999999999999"
              Start="0,0"
              End="150.3,38.3999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.6424615384615" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.6424615384615"
                    Point2="0,18.6424615384615"
                    Point3="4,18.6424615384615" />
                  <mssgle:LineSegment
                    End="146.3,18.6424615384615" />
                  <mssgle:CubicBezierSegment
                    Point1="146.3,18.6424615384615"
                    Point2="150.3,18.6424615384615"
                    Point3="150.3,22.6424615384615" />
                  <mssgle:LineSegment
                    End="150.3,38.3999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="34.2199999999999,23.6424615384615,81.86,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Films Segrigation\Films Data Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>